module.exports = {
	root: true,
	env: {
		browser: true,
		node: true,
		es2022: true,
		jest: true,
	},
	extends: [
		'eslint:recommended',
		'plugin:@typescript-eslint/recommended',
		'plugin:react/recommended',
		'plugin:react-hooks/recommended',
		'plugin:jsx-a11y/recommended',
		'plugin:storybook/recommended',
	],
	parser: '@typescript-eslint/parser',
	parserOptions: {
		ecmaVersion: 2022,
		sourceType: 'module',
		ecmaFeatures: {
			jsx: true,
		},
	},
	plugins: [
		'@typescript-eslint',
		'react',
		'react-hooks',
		'react-refresh',
		'jsx-a11y',
		'jest',
		'storybook',
	],
	settings: {
		react: {
			version: 'detect',
		},
	},
	ignorePatterns: [
		'dist',
		'build',
		'node_modules',
		'coverage',
		'.husky',
	],
	rules: {
		'linebreak-style': ['error', 'unix'],
		quotes: ['error', 'single', { avoidEscape: true }],
		semi: ['error', 'always'],
		'max-len': [
			'error',
			{
				code: 120,
				tabWidth: 2,
				ignoreUrls: true,
				ignoreComments: true,
				ignoreRegExpLiterals: true,
				ignoreStrings: true,
				ignoreTemplateLiterals: true,
			},
		],
		'eol-last': 'error',
		'object-curly-spacing': ['error', 'always'],
		'array-bracket-spacing': ['error', 'never'],
		'space-before-blocks': 'error',
		'space-before-function-paren': [
			'error',
			{
				anonymous: 'always',
				named: 'never',
				asyncArrow: 'always',
			},
		],
		'keyword-spacing': 'error',
		'space-infix-ops': 'error',
		'space-unary-ops': 'error',
		'no-console': 'warn',
		'no-debugger': 'error',
		'no-unused-vars': 'off',
		'no-undef': 'off',
		'prefer-const': 'error',
		'no-var': 'error',
		'arrow-spacing': 'error',
		'prefer-arrow-callback': 'error',
		'prefer-template': 'error',
		'template-curly-spacing': 'error',
		'object-shorthand': 'error',
		'no-duplicate-imports': 'error',
		'no-useless-constructor': 'error',
		'no-useless-rename': 'error',
		'rest-spread-spacing': 'error',
		'prefer-destructuring': [
			'error',
			{
				array: false,
				object: true,
			},
		],
		'new-cap': ['error', { newIsCap: true, capIsNew: false }],
		'no-mixed-operators': 'off',
		'no-new-object': 'error',
		'no-array-constructor': 'error',
		'no-new-func': 'error',
		'no-new-wrappers': 'error',
		'no-param-reassign': 'error',
		'no-iterator': 'error',
		'no-loop-func': 'error',
		'no-eval': 'error',
		'no-implied-eval': 'error',
		'no-script-url': 'error',

		'@typescript-eslint/no-unused-vars': [
			'error',
			{
				argsIgnorePattern: '^_',
				varsIgnorePattern: '^_',
			},
		],
		'@typescript-eslint/no-explicit-any': 'off',
		'@typescript-eslint/no-non-null-assertion': 'off',
		'@typescript-eslint/consistent-type-definitions': ['error', 'interface'],
		'@typescript-eslint/array-type': ['error', { default: 'array' }],
		'@typescript-eslint/consistent-type-imports': [
			'error',
			{ prefer: 'type-imports' },
		],
		'react/prop-types': 'off',
		'react/react-in-jsx-scope': 'off',
		'react/jsx-uses-react': 'error',
		'react/jsx-uses-vars': 'error',
		'react/jsx-key': 'error',
		'react/jsx-no-duplicate-props': 'error',
		'react/jsx-no-undef': 'error',
		'react/jsx-pascal-case': 'error',
		'react/jsx-no-bind': [
			'error',
			{
				allowArrowFunctions: true,
				allowBind: false,
				ignoreRefs: true,
			},
		],
		'react/jsx-curly-spacing': ['warn', 'never'],
		'react/jsx-equals-spacing': ['warn', 'never'],
		'react/jsx-wrap-multilines': 'error',
		'react/no-danger': 'warn',
		'react/no-did-mount-set-state': 'error',
		'react/no-did-update-set-state': 'error',
		'react/no-direct-mutation-state': 'error',
		'react/no-string-refs': 'error',
		'react/no-unknown-property': 'error',
		'react/prefer-es6-class': 'error',
		'react/self-closing-comp': 'error',
		'react/sort-comp': 'error',
		'react/jsx-boolean-value': ['error', 'never'],
		'react/jsx-closing-bracket-location': ['error', 'line-aligned'],
		'react/jsx-closing-tag-location': 'error',
		'react/jsx-tag-spacing': [
			'error',
			{
				closingSlash: 'never',
				beforeSelfClosing: 'always',
				afterOpening: 'never',
				beforeClosing: 'never',
			},
		],
		'react-refresh/only-export-components': 'off',
		'react-hooks/exhaustive-deps': 'off',
		'jsx-a11y/alt-text': 'error',
		'jsx-a11y/anchor-has-content': 'error',
		'jsx-a11y/anchor-is-valid': 'warn',
		'jsx-a11y/aria-props': 'error',
		'jsx-a11y/aria-proptypes': 'off',
		'jsx-a11y/aria-role': 'error',
		'jsx-a11y/aria-unsupported-elements': 'error',
		'jsx-a11y/click-events-have-key-events': 'error',
		'jsx-a11y/heading-has-content': 'error',
		'jsx-a11y/html-has-lang': 'error',
		'jsx-a11y/iframe-has-title': 'error',
		'jsx-a11y/img-redundant-alt': 'error',
		'jsx-a11y/label-has-associated-control': 'error',
		'jsx-a11y/mouse-events-have-key-events': 'error',
		'jsx-a11y/no-access-key': 'error',
		'jsx-a11y/no-autofocus': 'warn',
		'jsx-a11y/no-redundant-roles': 'error',
		'jsx-a11y/role-has-required-aria-props': 'error',
		'jsx-a11y/role-supports-aria-props': 'error',
		'jsx-a11y/scope': 'error',
		'jsx-a11y/tabindex-no-positive': 'error',
		'max-params': ['error', 10],
		'max-depth': ['error', 10],
		'max-nested-callbacks': ['error', 5],
		'max-lines': [
			'error',
			{
				max: 450,
				skipBlankLines: true,
				skipComments: true,
			},
		],

		'jest/no-disabled-tests': 'warn',
		'jest/no-focused-tests': 'error',
		'jest/prefer-to-have-length': 'warn',

		'no-restricted-imports': [
			'error',
			{
				patterns: ['@mui/*/*/*'],
			},
		],
	},
	overrides: [
		{
			files: [
				'**/*.test.{js,jsx,ts,tsx}',
				'**/*.spec.{js,jsx,ts,tsx}',
				'**/__tests__/**/*.{js,jsx,ts,tsx}',
				'**/__mocks__/**/*.{js,jsx,ts,tsx}',
				'dev-tools/**/*.{js,ts,jsx,tsx}',
			],
			rules: {
				'@typescript-eslint/no-explicit-any': 'off',
				'@typescript-eslint/no-non-null-assertion': 'off',
				'@typescript-eslint/no-unused-vars': 'off',
				'@typescript-eslint/no-empty-object-type': 'off',
				'@typescript-eslint/no-empty-interface': 'off',
			},
		},
		{
			files: ['dev-tools/**/*.{js,ts,jsx,tsx}'],
			rules: {
				'no-console': 'off',
				'no-debugger': 'off',
				'@typescript-eslint/no-explicit-any': 'off',
				'@typescript-eslint/no-unused-vars': 'off',
				'@typescript-eslint/no-var-requires': 'off',
				'max-lines': 'off',
			},
		},
		{
			files: ['**/webpack.*.js', '**/config/webpack.*.js'],
			env: {
				node: true,
			},
			rules: {
				'@typescript-eslint/no-var-requires': 'off',
				'no-console': 'off',
			},
		},
	],
};
